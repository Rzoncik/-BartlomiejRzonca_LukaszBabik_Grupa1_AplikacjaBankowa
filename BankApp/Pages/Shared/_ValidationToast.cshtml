@using Microsoft.AspNetCore.Mvc.ModelBinding
@model dynamic

@{
    bool hasErrors = !ViewData.ModelState.IsValid;
    string? toastMessage = ViewData["ToastMessage"] as string;
}

@if (hasErrors || !string.IsNullOrEmpty(toastMessage))
{
    <section id="validation-toast" class="validation-toast">
        @if (hasErrors)
    {
        <section>
            @foreach (ModelStateEntry entry in ViewData.ModelState.Values)
        {
            foreach (ModelError error in entry.Errors)
            {
                <span>@error.ErrorMessage</span>
                <br/>
            }
        }
        </section>
    }
    else
    {
        <span>@toastMessage</span>
    }
    <button type="button" class="close-btn" aria-label="Zamknij" onclick="document.getElementById('validation-toast').remove()">Ã—</button>
        </section>

        <script>
        setTimeout(() => document.getElementById('validation-toast')?.remove(), 6000);
        </script>
}